# Generated by Django 2.0.2 on 2018-05-29 04:06

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AndroidManifestAppinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appid', models.IntegerField(db_column='AppID')),
                ('appname', models.TextField(db_column='AppName')),
            ],
            options={
                'managed': False,
                'db_table': 'Android_Manifest_AppInfo',
            },
        ),
        migrations.CreateModel(
            name='AndroidManifestCommitinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commit_val', models.TextField(blank=True, db_column='Commit_val', null=True)),
                ('author_name', models.TextField(blank=True, db_column='Author_Name', null=True)),
                ('author_email', models.TextField(blank=True, db_column='Author_Email', null=True)),
                ('commit_date', models.TextField(blank=True, db_column='Commit_Date', null=True)),
                ('appid', models.IntegerField(db_column='AppID')),
                ('commit_order', models.IntegerField(db_column='Commit_Order')),
                ('commit_id', models.IntegerField(db_column='Commit_ID')),
                ('commit_message', models.TextField(blank=True, db_column='Commit_Message', null=True)),
                ('versioncode', models.TextField(blank=True, db_column='VersionCode', null=True)),
                ('versionname', models.TextField(blank=True, db_column='VersionName', null=True)),
                ('minsdk', models.TextField(blank=True, db_column='minSDK', null=True)),
                ('targetsdk', models.TextField(blank=True, db_column='targetSDK', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'Android_Manifest_CommitInfo',
            },
        ),
        migrations.CreateModel(
            name='AndroidManifestIntent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intent_id', models.IntegerField(db_column='Intent_ID')),
                ('intent', models.TextField(db_column='Intent')),
            ],
            options={
                'managed': False,
                'db_table': 'Android_Manifest_Intent',
            },
        ),
        migrations.CreateModel(
            name='AndroidManifestIntentJoin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commit_id', models.IntegerField(db_column='Commit_ID')),
                ('intent_id', models.IntegerField(db_column='Intent_ID')),
            ],
            options={
                'managed': False,
                'db_table': 'android_Manifest_intent_join',
            },
        ),
        migrations.CreateModel(
            name='AndroidManifestPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission_id', models.IntegerField(db_column='Permission_ID')),
                ('permission', models.TextField(db_column='Permission')),
            ],
            options={
                'managed': False,
                'db_table': 'Android_Manifest_Permission',
            },
        ),
        migrations.CreateModel(
            name='AndroidManifestPermissionJoin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commit_id', models.IntegerField(db_column='Commit_ID')),
                ('permission_id', models.IntegerField(db_column='Permission_ID')),
            ],
            options={
                'managed': False,
                'db_table': 'android_Manifest_permission_join',
            },
        ),
        migrations.CreateModel(
            name='Androriskrun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('versionid', models.IntegerField(db_column='versionID', unique=True)),
            ],
            options={
                'managed': False,
                'db_table': 'AndroriskRun',
            },
        ),
        migrations.CreateModel(
            name='Appdata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appid', models.IntegerField(blank=True, db_column='appId', null=True)),
                ('name', models.CharField(max_length=40)),
                ('description', models.TextField(blank=True, null=True)),
                ('categories', models.TextField(blank=True, null=True)),
                ('license', models.TextField(blank=True, null=True)),
                ('auto_name', models.TextField(blank=True, null=True)),
                ('provides', models.TextField(blank=True, null=True)),
                ('website', models.TextField(blank=True, null=True)),
                ('source_code', models.TextField(blank=True, null=True)),
                ('issue_tracker', models.TextField(blank=True, null=True)),
                ('donate', models.TextField(blank=True, null=True)),
                ('flattrid', models.IntegerField(blank=True, null=True)),
                ('bitcoin', models.TextField(blank=True, null=True)),
                ('litecoin', models.TextField(blank=True, null=True)),
                ('summary', models.CharField(blank=True, max_length=50, null=True)),
                ('maintainer_notes', models.TextField(blank=True, null=True)),
                ('repo_type', models.TextField(blank=True, null=True)),
                ('antifeatures', models.TextField(blank=True, null=True)),
                ('disabled', models.NullBooleanField()),
                ('requires_root', models.NullBooleanField()),
                ('archive_policy', models.TextField(blank=True, null=True)),
                ('update_check_mode', models.TextField(blank=True, null=True)),
                ('vercode_operation', models.TextField(blank=True, null=True)),
                ('update_check_ignore', models.TextField(blank=True, null=True)),
                ('auto_update_mode', models.TextField(blank=True, null=True)),
                ('current_version', models.TextField(blank=True, null=True)),
                ('current_build_number', models.IntegerField(blank=True, null=True)),
                ('no_source_since', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'AppData',
            },
        ),
        migrations.CreateModel(
            name='Codingstandard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('versionid', models.IntegerField(db_column='versionID', unique=True)),
                ('classes', models.IntegerField(blank=True, null=True)),
                ('ncloc', models.IntegerField(blank=True, null=True)),
                ('functions', models.IntegerField(blank=True, null=True)),
                ('duplicated_lines', models.IntegerField(blank=True, null=True)),
                ('test_errors', models.IntegerField(blank=True, null=True)),
                ('skipped_tests', models.IntegerField(blank=True, null=True)),
                ('complexity', models.IntegerField(blank=True, null=True)),
                ('class_complexity', models.FloatField(blank=True, null=True)),
                ('function_complexity', models.FloatField(blank=True, null=True)),
                ('comment_lines', models.IntegerField(blank=True, null=True)),
                ('comment_lines_density', models.FloatField(blank=True, null=True)),
                ('duplicated_lines_density', models.FloatField(blank=True, null=True)),
                ('files', models.IntegerField(blank=True, null=True)),
                ('directories', models.IntegerField(blank=True, null=True)),
                ('file_complexity', models.FloatField(blank=True, null=True)),
                ('violations', models.IntegerField(blank=True, null=True)),
                ('duplicated_blocks', models.IntegerField(blank=True, null=True)),
                ('duplicated_files', models.IntegerField(blank=True, null=True)),
                ('lines', models.IntegerField(blank=True, null=True)),
                ('blocker_violations', models.IntegerField(blank=True, null=True)),
                ('critical_violations', models.IntegerField(blank=True, null=True)),
                ('major_violations', models.IntegerField(blank=True, null=True)),
                ('minor_violations', models.IntegerField(blank=True, null=True)),
                ('commented_out_code_lines', models.IntegerField(blank=True, null=True)),
                ('line_coverage', models.FloatField(blank=True, null=True)),
                ('branch_coverage', models.FloatField(blank=True, null=True)),
                ('build_average_time_to_fix_failure', models.FloatField(blank=True, null=True)),
                ('build_longest_time_to_fix_failure', models.FloatField(blank=True, null=True)),
                ('build_average_builds_to_fix_failures', models.IntegerField(blank=True, null=True)),
                ('generated_lines', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'CodingStandard',
            },
        ),
        migrations.CreateModel(
            name='Githistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commitid', models.IntegerField(blank=True, db_column='commitID', null=True)),
                ('appid', models.IntegerField(blank=True, db_column='appID', null=True)),
                ('commit_hash', models.TextField(blank=True, null=True)),
                ('author', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('time', models.IntegerField(blank=True, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'GitHistory',
            },
        ),
        migrations.CreateModel(
            name='Intent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intentid', models.IntegerField(blank=True, db_column='intentID', null=True)),
                ('name', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'Intent',
            },
        ),
        migrations.CreateModel(
            name='IntentVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intentid', models.IntegerField(blank=True, db_column='intentID', null=True)),
                ('versionid', models.IntegerField(db_column='versionID')),
            ],
            options={
                'managed': False,
                'db_table': 'Intent_Version',
            },
        ),
        migrations.CreateModel(
            name='Overpermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permissionid', models.IntegerField(db_column='permissionID')),
                ('versionid', models.IntegerField(db_column='versionID')),
            ],
            options={
                'managed': False,
                'db_table': 'OverPermission',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permissionid', models.IntegerField(blank=True, db_column='permissionID', null=True)),
                ('name', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'Permission',
            },
        ),
        migrations.CreateModel(
            name='Sonarrun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('versionid', models.IntegerField(db_column='versionID', unique=True)),
            ],
            options={
                'managed': False,
                'db_table': 'SonarRun',
            },
        ),
        migrations.CreateModel(
            name='Stowawayrun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('versionid', models.IntegerField(db_column='versionID', unique=True)),
            ],
            options={
                'managed': False,
                'db_table': 'StowawayRun',
            },
        ),
        migrations.CreateModel(
            name='Underpermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permissionid', models.IntegerField(db_column='permissionID')),
                ('versionid', models.IntegerField(db_column='versionID')),
            ],
            options={
                'managed': False,
                'db_table': 'UnderPermission',
            },
        ),
        migrations.CreateModel(
            name='Version',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('versionid', models.IntegerField(blank=True, db_column='versionID', null=True)),
                ('appid', models.TextField(db_column='appID')),
                ('version', models.TextField(blank=True, null=True)),
                ('build_number', models.IntegerField(blank=True, null=True)),
                ('build_commit', models.TextField(blank=True, null=True)),
                ('isapkexists', models.NullBooleanField(db_column='isAPKExists')),
            ],
            options={
                'managed': False,
                'db_table': 'Version',
            },
        ),
        migrations.CreateModel(
            name='Vulnerability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('versionid', models.IntegerField(db_column='versionID')),
                ('fuzzy_risk', models.FloatField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'Vulnerability',
            },
        ),
    ]
